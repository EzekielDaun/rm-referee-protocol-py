from __future__ import annotations

from typing import Any, Dict


class RefereeFrameHeaderPy:
    def __init__(self, data: bytes) -> None: ...

    @property
    def data_length(self) -> int: ...

    @property
    def seq(self) -> int: ...

    @property
    def crc8(self) -> int: ...

    def to_bytes(self) -> bytes: ...

    def __repr__(self) -> str: ...


class RefereeFramePy:
    def __init__(self, data: bytes) -> None: ...

    @property
    def header(self) -> RefereeFrameHeaderPy: ...

    @property
    def frame_tail(self) -> int: ...

    @property
    def seq(self) -> int: ...

    @seq.setter
    def seq(self, value: int) -> None: ...

    def cmd_data_bytes(self) -> bytes: ...

    def cmd_id(self) -> int: ...

    def set_cmd_data_bytes(self, data: bytes) -> None: ...

    def set_header_from_bytes(self, data: bytes) -> None: ...

    def cmd_data_py(self) -> Dict[str, Any]: ...

    def set_cmd_data_py(self, obj: Dict[str, Any]) -> None: ...

    def to_bytes(self) -> bytes: ...

    def __repr__(self) -> str: ...

    @classmethod
    def from_cmd_py(cls, seq: int, cmd: Dict[str, Any]) -> RefereeFramePy: ...

    @classmethod
    def from_cmd_bytes(cls, seq: int, cmd_bytes: bytes) -> RefereeFramePy: ...

